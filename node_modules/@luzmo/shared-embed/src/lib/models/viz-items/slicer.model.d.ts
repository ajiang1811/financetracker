import { AvailableSlots, FilterExpression, FilterIn, FilterOperators, ParametersInput, StringOrNumber } from '../filters.model';
type SlicerFilterIn = FilterIn & {
    expression: Extract<FilterExpression, '? in ?'>;
    parameters: [
        {
            slot: Extract<AvailableSlots, 'dimension'>;
        },
        StringOrNumber[]
    ];
};
type SlicerFilterIn2 = FilterIn & {
    expression: Extract<FilterExpression, '? between ?'>;
    parameters: [
        {
            slot: Extract<AvailableSlots, 'dimension'>;
        },
        ParametersInput
    ];
};
type SlicerFilterInput1 = Partial<Record<FilterOperators, (SlicerFilterIn | SlicerFilterInput1)[]>>;
type SlicerFilterInput2 = Partial<Record<FilterOperators, (SlicerFilterIn2 | SlicerFilterInput2)[]>>;
export type SlicerFilterInput = SlicerFilterInput1 | SlicerFilterInput2;
export {};
